server:
  port: 8080

spring:
  application:
    name: springboot-sharding
sharding:
  jdbc:
    datasource:
      names: ds0
      # 数据源ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/jpaorder1?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=true
        username: root
        password: 123456
    config:
      sharding:
        props:
          sql.show: true
        tables:
          t_user表:  #t_user表
#            key-generator-column-name: id  #主键
#            actual-data-nodes: ds0.t_user$->{0..1}    #数据节点,均匀分布
#            table-strategy:  #分表策略
#              inline: #行表达式
#                sharding-column: id
#                algorithm-expression: t_user$->{id % 2}  #按模运算分配
#            actual-data-nodes: ds0.t_user$->{(3..4).collect{t ->t.toString().padLeft(2,'0')}}    #数据节点,均匀分布
#            table-strategy:  #分表策略
#              inline: #行表达式
#                sharding-column: create_time
#                algorithm-expression: t_user$->{(Calendar.getInstance().get(Calendar.MONTH)+2).toString().padLeft(2,'0')}
            actual-data-nodes: ds0.t_user_$->{2022..2023}$->{(3..4).collect{t ->t.toString().padLeft(2,'0')}}    #数据节点,均匀分布
            table-strategy:  #分表策略
              standard:
                sharding-column: create_time
                precise-algorithm-class-name: com.jupiterboy.springboot.jpa.sharding.config.CreateTimeShardingTableAlgorithm