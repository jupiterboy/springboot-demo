server:
  port: 8080

spring:
  application:
    name: springboot-sharding

sharding:
  jdbc:
    datasource:
      names: ds0,ds1,ds0slave,ds1slave
      # 数据源ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order1
        username: root
        password: 123456
      # 数据源ds1
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order2
        username: root
        password: 123456
      # 数据源ds0-slave
      ds0slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order1-slave
        username: root
        password: 123456
      # 数据源ds1-slave
      ds1slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order2-slave
        username: root
        password: 123456
    config:
      sharding:
        props:
          sql.show: true
        tables:
          t_user:  #t_user表
            key-generator-column-name: id  #主键
            actual-data-nodes: ds$->{0..1}.t_user$->{0..1}    #数据节点,均匀分布
            database-strategy:   #分库策略
              standard:
                sharding-column: city_id
                precise-algorithm-class-name: springboot.config.UserShardingDBAlgorithm
            table-strategy:  #分表策略
              standard:
                sharding-column: sex
                precise-algorithm-class-name: springboot.config.UserShardingTableAlgorithm

          t_address:
            key-generator-column-name: id
            actual-data-nodes: ds$->{0..1}.t_address
            database-strategy:
              inline:
                sharding-column: lit
                algorithm-expression: ds$->{lit % 2}
        #读写分离
        master-slave-rules:
          ds0: # 读写分离数据源名称
            masterDataSourceName: ds0 #主数据库数据源名称
            slaveDataSourceNames: ds0slave #从数据库 数据源名称
            loadBalanceAlgorithmType: ROUND_ROBIN
          ds1:
            masterDataSourceName: ds1
            slaveDataSourceNames: ds1slave
            loadBalanceAlgorithmType: ROUND_ROBIN

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: springboot.entity

